import{_ as s,c as n,o as e,ah as i}from"./chunks/framework.D6otvB2a.js";const b=JSON.parse('{"title":"DeeReCT-PolyA模型复现","description":"","frontmatter":{},"headers":[],"relativePath":"research/DeeReCT-PolyA模型复现.md","filePath":"research/DeeReCT-PolyA模型复现.md","lastUpdated":1744982718000}'),p={name:"research/DeeReCT-PolyA模型复现.md"};function l(t,a,r,d,o,h){return e(),n("div",null,a[0]||(a[0]=[i(`<h1 id="deerect-polya模型复现" tabindex="-1">DeeReCT-PolyA模型复现 <a class="header-anchor" href="#deerect-polya模型复现" aria-label="Permalink to &quot;DeeReCT-PolyA模型复现&quot;">​</a></h1><p>项目地址：<a href="https://github.com/likesum/DeeReCT-PolyA" target="_blank" rel="noreferrer">https://github.com/likesum/DeeReCT-PolyA</a></p><p>论文地址：<a href="https://academic.oup.com/bioinformatics/article/35/14/2371/5221014" target="_blank" rel="noreferrer">https://academic.oup.com/bioinformatics/article/35/14/2371/5221014</a></p><h3 id="复现记录" tabindex="-1">复现记录 <a class="header-anchor" href="#复现记录" aria-label="Permalink to &quot;复现记录&quot;">​</a></h3><h4 id="数据准备" tabindex="-1">数据准备 <a class="header-anchor" href="#数据准备" aria-label="Permalink to &quot;数据准备&quot;">​</a></h4><p>为了准备训练或微调数据，应将序列放入<code>.txt</code>文件中，其中每行都是长度为 206 的 ATGC 序列，以中心 6 聚体为真或伪 poly(A) 基序。正数据和负数据应放在两个不同的子目录中。然后，运行</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python data_prep.py pos_root neg_root outfile [</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nfolds n]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>实际复现使用的命令如下：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python data_prep.py .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">human</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dragon_polyA_data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">positive5fold .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">human</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dragon_polyA_data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">negatives5fold .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">models</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test.npz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://picgo-typora-images.oss-cn-beijing.aliyuncs.com/img/202504182046838.png" alt="image-20241107143404850"></p><p>使用独热编码对原始序列进行编码，并将数据拆分为训练、验证和测试集。处理后的数据集将保存为文件<code>.npz</code>。请注意，如果您只想使用我们的预训练模型对您自己的数据进行推理，或者您没有基本事实标签，我们提供<a href="https://github.com/likesum/DeeReCT-PolyA#test-trained-models" target="_blank" rel="noreferrer">测试代码</a>，可以直接将无需准备的序列作为输入并进行预测。</p><p>结果会保存为.npz文件。</p><blockquote><p><code>.npz</code>文件是NumPy库中用于存储多个NumPy数组的压缩文件格式。它是NumPy的专用文件格式，用于高效地保存和加载大量数据。</p></blockquote><p>创建<code>.npz</code>文件</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import numpy as np</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 创建一些数据</span></span>
<span class="line"><span>array1 = np.array([1, 2, 3])</span></span>
<span class="line"><span>array2 = np.array([4, 5, 6])</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 将数组保存到.npz文件</span></span>
<span class="line"><span>np.savez(&#39;data.npz&#39;, array1=array1, array2=array2)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>读取<code>.npz</code>文件</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 加载.npz文件</span></span>
<span class="line"><span>data = np.load(&#39;data.npz&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 访问文件中的数组</span></span>
<span class="line"><span>array1 = data[&#39;array1&#39;]</span></span>
<span class="line"><span>array2 = data[&#39;array2&#39;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 打印数组</span></span>
<span class="line"><span>print(array1)</span></span>
<span class="line"><span>print(array2)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 关闭文件</span></span>
<span class="line"><span>data.close()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="模型训练" tabindex="-1">模型训练 <a class="header-anchor" href="#模型训练" aria-label="Permalink to &quot;模型训练&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python train.py data [--out outfile] [--hparam hyperparam_file]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>实际指令为：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python train.py ./models/test.npz  --out ./models/test_train_out.npz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python data_loader.py ./data/human/dragon_polyA_data/positive5fold ./data/human/dragon_polyA_data/negatives5fold</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://picgo-typora-images.oss-cn-beijing.aliyuncs.com/img/202504182043099.png" alt="image-20241121154448130"></p>`,23)]))}const u=s(p,[["render",l]]);export{b as __pageData,u as default};
