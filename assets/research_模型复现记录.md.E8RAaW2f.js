import{_ as a,c as i,o as n,ah as e}from"./chunks/framework.D6otvB2a.js";const c=JSON.parse('{"title":"SANPolyA","description":"","frontmatter":{},"headers":[],"relativePath":"research/模型复现记录.md","filePath":"research/模型复现记录.md","lastUpdated":1744982718000}'),p={name:"research/模型复现记录.md"};function t(l,s,h,r,k,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="sanpolya" tabindex="-1">SANPolyA <a class="header-anchor" href="#sanpolya" aria-label="Permalink to &quot;SANPolyA&quot;">​</a></h1><p>使用tf3环境</p><p>模型代码已经修改完成，可以使用作者预训练好的模型进行预测，命令如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> evaluate.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --h5File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./models/omni-human/model4.h5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sequence</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AATCTATATGCTTTACACTAGCTTTCTGCATTTAATAGGTTAGAATGTAAATTAAAGTGTAGCAATAGCAACAAAATATTTATTCTACTGTAAATGACAAAAGAAAAAGAAAAATTGAGCCTTGGGACGTGCCCATTTTTACTGTAAATTATGATTCCGTAACTGACTTGTAGTAAGCAGTGTTTCTGGCCCCTAAGTATTGCTGC</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>后续需要自己增加模型训练代码。</p><h1 id="deepgengrep" tabindex="-1">DeepGenGrep <a class="header-anchor" href="#deepgengrep" aria-label="Permalink to &quot;DeepGenGrep&quot;">​</a></h1><p>使用tf3环境</p><p>模型已经复现完成。</p><h1 id="deerect-polya复现" tabindex="-1">DeeReCT-PolyA复现 <a class="header-anchor" href="#deerect-polya复现" aria-label="Permalink to &quot;DeeReCT-PolyA复现&quot;">​</a></h1><p>使用tf3环境</p><p>1、数据预处理</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python data_prep.py ./data/human/dragon_polyA_data/positive5fold ./data/human/dragon_polyA_data/negatives5fold ./test.npz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2、模型训练</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python train.py ./test.npz  --out ./test_train_out.npz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、模型测试</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python test.py test.txt ./models/omni_model.npz --out ./out.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>复现完成。</p><h1 id="polyadg" tabindex="-1">polyADG <a class="header-anchor" href="#polyadg" aria-label="Permalink to &quot;polyADG&quot;">​</a></h1><p>使用tf3环境，如果不行，改用tf2环境</p><p>运行命令</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>只能说复现出来了一部分</p><h1 id="pasnet模型" tabindex="-1">PASNet模型 <a class="header-anchor" href="#pasnet模型" aria-label="Permalink to &quot;PASNet模型&quot;">​</a></h1><p>使用的环境：使用的是tf2环境。</p><p>1、数据处理</p><p>首先使用自带的Datatransform.py对正负样本进行处理，得到kmer划分后的文件，比如neg_data_name_Data2Text_word5.txt 内容如下：</p><p><img src="https://picgo-typora-images.oss-cn-beijing.aliyuncs.com/img/202501091525440.png" alt="image-20250109152557367"></p><p>之后使用这个脚本进行转换为vectors。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gensim.models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Word2Vec</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 假设data是通过Data2Text函数处理后得到的句子列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># data = [PosSentences + NegSentences]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/Users/macbook/Desktop/test/neg_data_name_Data2Text_word5.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将句子字符串转换为单词（这里是k-mer）列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_sentences </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [sentence.split() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sentence </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 训练Word2Vec模型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Word2Vec(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sentences</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_sentences, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">vector_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">min_count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">workers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印模型中某个词的向量（例如第一个k-mer）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model.wv[data_sentences[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存模型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># model.save(&quot;word2vec.model&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者只保存词向量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model.wv.save_word2vec_format(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;word_vectors.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">binary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>结果是类似这么这样： <img src="https://picgo-typora-images.oss-cn-beijing.aliyuncs.com/img/202501091527643.png" alt="image-20250109152737607"></p><p>word_vectors.txt 这个文件很重要，要保存在Data目录下！！</p><p>2、模型训练</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./code/pasnet.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --PosInputFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pos.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --NegInputFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> neg.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --DataName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --FileName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file_tag</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pasnet.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --PosInputFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./Data/hs_pos_PAS_AATAAA.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --NegInputFile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Data/hs_neg_PAS_AATAAA.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --DataName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> human_AATAAA</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --FileName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> human_AATAAA</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>模型需要的一个是正负样本的序列文件路径，一个是 Data/word_vectors.txt 的文件！！</p><p>之后会生成Data/data_data_name_Data2Text_word5.txt.npy、labels_data_name_Data2Text_word5.txt.npy、</p><p>neg_data_name_Data2Text_word5.txt、</p><p>pos_data_name_Data2Text_word5.txt</p><p>四个文件。</p><h1 id="deepgsr" tabindex="-1">DeepGSR <a class="header-anchor" href="#deepgsr" aria-label="Permalink to &quot;DeepGSR&quot;">​</a></h1><p>未复现完成。</p>`,40)]))}const g=a(p,[["render",t]]);export{c as __pageData,g as default};
